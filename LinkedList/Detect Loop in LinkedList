
// Solution

// Base on floyd cycle.We are using two pointers slow and fast.If the linkedlist contains cycle it is
// guarented that slow and fast will meet.If linkedlist doesnot have cycle the fast will reach the end of list 
// having null value at the end.

class Solution {
    //Function to check if the linked list has a loop.
    public static boolean detectLoop(Node head){
        Node fast=head,slow=head;
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
            if(fast==slow)
               return true;
        }
        return false;
    }
}
