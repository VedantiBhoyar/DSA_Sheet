// Solution

/*
class Node {
    int data;
    Node next, arb;

    Node(int d) 
    { 
        data = d;
        next = arb = null; 
        
    }
}*/

class Clone {
    //Function to clone a linked list with next and random pointer.
    Node copyList(Node head) {

        // Step 1: Creating New Node and inserting between two previous nodes forming linkage

        Node curr=head;
        while(curr!=null){
            Node temp=new Node(curr.data);
            Node next=curr.next;
            curr.next=temp;
            temp.next=next;
            curr=next;
        }

        // Step 2: Set random pointers of the new nodes

        curr=head;
        while(curr!=null){
            if(curr.arb!=null){
                curr.next.arb=curr.arb.next;
            }
            curr=curr.next.next;
        }

        // Step 3: Separate the new list from the original list

        Node newHead=head.next;
        curr=head;
        while(curr!=null){
            Node temp=curr.next;
            curr.next=temp.next;
            if(temp.next!=null){
                temp.next=temp.next.next;
            }
            curr=curr.next;
        }
        return newHead;
    }
}

