public class Solution {
    public long isSubMax(int nums[],long mid,int n){
        long count=1;
        int total=0;
        for(int i=0;i<n;i++){
            if(nums[i]+total<=mid)
             total+=nums[i];
            else{
                count++;
                total=nums[i];
            }
        }
        return count;
    }
    public int paint(int A, int B, int[] C) {
        long max=C[0];
        long sum=0;
        long ans=-1;
        for(int i=0;i<C.length;i++){
            sum+=C[i];
            max=Math.max(max,C[i]);
        }
        long low=max;
        long high=sum;
        
        while(low<=high){
            long mid=low+(high-low)/2;
            if(isSubMax(C,mid,C.length)<=A){
                ans=mid;
                high=mid-1;;
            }
             
            else
             low=mid+1;
        }
        return (int) (ans * (long) B % 10000003);
    }
}
